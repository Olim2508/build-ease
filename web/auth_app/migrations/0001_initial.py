# Generated by Django 3.2.11 on 2023-04-05 07:47

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('sms_code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('type', models.CharField(choices=[('PRO', 'Поставщик'), ('COU', 'Курьер'), ('MAS', 'Бригадир'), ('CLI', 'Клиент')], default='CLI', max_length=3, verbose_name='Тип аккаунта')),
                ('provider_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование поставщика')),
                ('provider_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес поставщика')),
                ('courier_company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование компании')),
                ('vehicle_brand', models.CharField(blank=True, max_length=255, null=True, verbose_name='Марка и модель транспорта')),
                ('state_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Гос.номер')),
                ('car_color', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цвет машины')),
                ('about_me', models.CharField(blank=True, max_length=255, null=True, verbose_name='О себе')),
                ('experience', models.CharField(blank=True, max_length=255, null=True, verbose_name='Опыт работы')),
                ('number_of_objects', models.IntegerField(blank=True, null=True, verbose_name='Количество объектов может брать одновременно')),
                ('price_per_metre_square', models.IntegerField(blank=True, null=True, verbose_name='Стоимость кв.метра')),
                ('is_safe_deal', models.BooleanField(blank=True, default=False, null=True, verbose_name='Безопасная сделка')),
            ],
            options={
                'verbose_name': 'Аккаунт',
                'verbose_name_plural': 'Аккаунты',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Город',
            },
        ),
        migrations.CreateModel(
            name='SmsCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='Код подтверждения')),
                ('expires_at', models.DateTimeField(verbose_name='Срок действия')),
                ('is_used', models.BooleanField(default=False, verbose_name='Был использован?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='AccountImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('STD', 'Простой'), ('PAS', 'Уд. личности'), ('TPS', 'Тех.паспорт'), ('MPH', 'Фото бригадира'), ('DRV', 'Водительское удостоверение'), ('TRP', 'Фото транспорта')], default='STD', max_length=255)),
                ('image', models.ImageField(upload_to='images')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_images', to='auth_app.account')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accounts', to='auth_app.city', verbose_name='Город'),
        ),
    ]
