version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: docker/prod/Dockerfile
      cache_from:
        - "${WEB_IMAGE}"
    image: "${WEB_IMAGE}"
    command: gunicorn src.wsgi:application --bind 0.0.0.0:8000
    volumes:
#      - web:/home/app/web
#      - ./web/entrypoint.prod.sh:/home/app/web/entrypoint.prod.sh
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - .env
#    restart: always
  nginx-proxy:
    container_name: nginx-proxy
    platform: linux/amd64
    build:
      context: .
      dockerfile: docker/prod/nginx/staging/Dockerfile
      cache_from:
        - "${NGINX_IMAGE}"
    image: "${NGINX_IMAGE}"
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - ./.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
